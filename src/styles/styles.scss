@import "./theme_new.scss";

/*  CSS styling agm-map is required!
    It is really important that you define a height component `agm-map`. 
    Otherwise, you won't see a map on the page!
*/
agm-map {
  height: 500px;
}

* {
  box-sizing: border-box;
}

:host {
  display: block;
}

html {
  font-family: $font-header;
  font-size: 28px;
}

body {
  background: $primary-dark;
  color: $text-light;

  display: flex;
  flex-direction: column;
  justify-content: flex-start;
  align-items: stretch;
  position: relative;
  margin: 0 auto;
  width: 100%;
}

h1,
h2,
h3,
h4,
h5,
h6 {
  font-family: $font-header;
  margin: 0;
  margin-left: $ml;
  width: 100%;
}

p {
  font-family: $font-text;
  font-weight: 300;
  margin: 0;
}

label {
  display: inline-block;
  margin-bottom: 0;
}

a,
a * {
  cursor: pointer !important;
  text-decoration: none !important;
  transition: color .2s ease-out;
}

#container {
  margin-top: 3rem;
}


.sub-header {
  margin-top: 1.5em;
  margin-bottom: 0.3em;
}

.sub-text {
	font-size: .8rem;
  color: $text-light-fade;
  font-weight: 100;
	line-height: 1.2rem;
}

.color-accent {
  color: $accent;
}

.color-warn {
  color: $warn;
}

.ml {
  margin-left: $ml;
}



//  Replace w/ BootStrap
.message {
  text-align: center;
  width: 100%;
}

.warn .message {
  color: $warn;
  
}

.panel {
  position: relative;
  background: #506450;
  color: #fafaf0;
  
  margin-bottom: 5px;
  box-shadow: 0 3px 3px -2px rgba(0, 0, 0, .2), 0 3px 4px 0 rgba(0, 0, 0, .14), 0 1px 8px 0 rgba(0, 0, 0, .12);

  //  padding: 0.2rem 0;    //  Min height negates this.
  min-height: 3rem;

}

.panel.warn {
  border: 1px solid $warn;
  background: desaturate(darken($warn, 35), 75);
}

.mat-dialog-container .panel {
  background: transparent;
  box-shadow: none;
}




//  BootStrap Fixes
.row {
  width: 100%;
}

.btn-lg {
  padding: .5rem 1rem !important;
}

a:hover {
  color: $accent;
}






router-outlet ~ * {
  width: 1050px;
}

.rotate {
  animation: rotate 2s infinite;
  display: block;
}

@keyframes rotate {
  from {
    transform: rotate(0deg);
  }
  to {
    transform: rotate(360deg);
  }
}

.rotate-90 {
  transform: rotate(90deg);
}





table {
  width: 100%;
}

.rotate-90 {
  transform: rotate(90deg);
  display: inline-block;
}

/*      Team Color Classes      */
.colorChoice .colorIcon {
  width: 0.5em;
  display: inline-block;
}

.colorChoice, .colorIcon {
  position: absolute;
  top: 0;
  bottom: 0;
  left: 0;
}

.colorIcon.red {
  background: $c-red;
}

.colorIcon.blue {
  background: $c-blue;
}

.colorIcon.green {
  background: $c-green;
}

.colorIcon.yellow {
  background: $c-yellow;
}

.colorIcon.orange {
  background: $c-orange;
}

.colorIcon.purple {
  background: $c-purple;
}

.colorIcon.pink {
  background: $c-pink;
}

.colorIcon.white {
  background: $c-white;
}

.colorIcon.light {
  background: $text-light;
}





.teamDropPad {
  padding: .2rem;
  padding-bottom: 1rem;
  border: .3rem solid;
  margin: .2rem;
  min-height: 5rem;
  min-width: 30vw;


  background: transparent !important;
  border-color: $primary-light;
  color: $primary-light;

  .cdk-drag-placeholder > * {
    border-color: $primary-light;

    .colorChoice {
      display: none;
    }
  }
}

.teamDropPad > label {
  width: 100%;
  text-align: center;
  font-weight: 600;
}

.teamDropPad h6 {
  color: inherit;
}


.teamDropPad.red {
  color: $c-red;
  border-color: rgba( $c-red, .6 );
  background: rgba( $c-red, .1 ) !important; 

  .cdk-drag-placeholder > * {
    border-color: rgba( $c-red, .1 );
  }
}

.teamDropPad.blue {
  color: $c-blue;
  border-color: rgba( $c-blue, .6 );
  background: rgba( $c-blue, .1 ) !important;

  .cdk-drag-placeholder > * {
    border-color: rgba( $c-blue, .1 );
  }
}

.teamDropPad.green {
  color: $c-green;
  border-color: rgba( $c-green, .6 );
  background: rgba( $c-green, .1 ) !important;

  .cdk-drag-placeholder > * {
    border-color: rgba( $c-green, .1 );
  }
}

.teamDropPad.yellow {
  color: $c-yellow;
  border-color: rgba( $c-yellow, .6 );
  background: rgba( $c-yellow, .1 ) !important;

  .cdk-drag-placeholder > * {
    border-color: rgba( $c-yellow, .1 );
  }
}

.teamDropPad.orange {
  color: $c-orange;
  border-color: rgba( $c-orange, .6 );
  background: rgba( $c-orange, .1 ) !important;

  .cdk-drag-placeholder > * {
    border-color: rgba( $c-orange, .1 );
  }
}

.teamDropPad.purple {
  color: $c-purple;
  border-color: rgba( $c-purple, .6 );
  background: rgba( $c-purple, .1 ) !important;

  .cdk-drag-placeholder > * {
    border-color: rgba( $c-purple, .1 );
  }
}

.teamDropPad.pink {
  color: $c-pink;
  border-color: rgba( $c-pink, .6 );
  background: rgba( $c-pink, .1 ) !important;

  .cdk-drag-placeholder > * {
    border-color: rgba( $c-pink, .1 );
  }
}

.teamDropPad.white {
  color: $c-white;
  border-color: rgba( $c-white, .6 );
  background: rgba( $c-white, .1 ) !important;

  .cdk-drag-placeholder > * {
    border-color: rgba( $c-white, .1 );
  }
}


.cdk-drag-placeholder a {
  display: none;
}






.teamPicker.red:not([disabled]) {
  background: $c-red !important;
  color: $c-white !important;
}

.teamPicker.blue:not([disabled]) {
  background: $c-blue !important;
  color: $c-white !important;
}

.teamPicker.green:not([disabled]) {
  background: $c-green !important;
  color: $c-white !important;
}

.teamPicker.yellow:not([disabled]) {
  background: $c-yellow !important;
  color: $c-white !important;
}

.teamPicker.orange:not([disabled]) {
  background: $c-orange !important;
  color: $c-white !important;
}

.teamPicker.purple:not([disabled]) {
  background: $c-purple !important;
  color: $c-white !important;
}

.teamPicker.pink:not([disabled]) {
  background: $c-pink !important;
  color: $c-white !important;
}

.teamPicker.white:not([disabled]) {
  background: $c-white !important;
  color: $primary-light !important;
}




.teamHeader.red:not([disabled]) {
  color: $c-red;
}

.teamHeader.blue:not([disabled]) {
  color: $c-blue;
}

.teamHeader.green:not([disabled]) {
  color: $c-green;
}

.teamHeader.yellow:not([disabled]) {
  color: $c-yellow;
}

.teamHeader.orange:not([disabled]) {
  color: $c-orange;
}

.teamHeader.purple:not([disabled]) {
  color: $c-purple;
}

.teamHeader.pink:not([disabled]) {
  color: $c-pink;
}

.teamHeader.white:not([disabled]) {
  color: $c-white;
}






.scores {
  display: flex;
  flex-direction: row;
  justify-content: space-evenly;
  align-items: center;
  margin-right: 1em;
}

.scores label {
  display: block;
  text-align: center;
}

.scores:not(.Leader) label:last-of-type {
  color: rgba(240, 250, 240, 0.7);
}

.scores.Leader {
  color: $warn;
}


@media only screen and (max-width: 1100px) {
  router-outlet ~ * {
    width: 95%;
  }
}

@media only screen and (max-width: 720px) {
  router-outlet ~ * {
    min-width: 480px;
  }
}
